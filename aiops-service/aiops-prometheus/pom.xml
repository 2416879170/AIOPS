<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>aiops-service</artifactId>
        <groupId>com.coocaa</groupId>
        <version>2.3.1</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>aiops-prometheus</artifactId>
    <name>${project.artifactId}</name>
    <version>${aiops.project.version}</version>
    <packaging>jar</packaging>
    <description>对接普罗米修斯服务</description>
    <dependencies>
        <dependency>
            <groupId>com.coocaa</groupId>
            <artifactId>aiops-core-boot</artifactId>
            <version>${aiops.tool.version}</version>
        </dependency>
        <dependency>
            <groupId>com.coocaa</groupId>
            <artifactId>aiops-prometheus-api</artifactId>
            <version>${aiops.project.version}</version>
        </dependency>
        <!-- 实现主动向客户端推送消息功能 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        <!--RabbitMq-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>
        <!--异常检测API-->
        <dependency>
            <groupId>com.coocaa</groupId>
            <artifactId>aiops-detector-api</artifactId>
            <version>2.3.1</version>
        </dependency>
        <!--通知服务API-->
        <dependency>
            <groupId>com.coocaa</groupId>
            <artifactId>aiops-notice-api</artifactId>
            <version>2.3.1</version>
        </dependency>
        <!--用户服务API-->
        <dependency>
            <groupId>com.coocaa</groupId>
            <artifactId>aiops-user-api</artifactId>
            <version>2.3.1</version>
        </dependency>
        <!--CSV导出导入-->
        <dependency>
            <groupId>net.sourceforge.javacsv</groupId>
            <artifactId>javacsv</artifactId>
            <version>2.0</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>io.github.swagger2markup</groupId>
                <artifactId>swagger2markup-maven-plugin</artifactId>
                <version>1.3.4</version>
                <configuration>
                    <swaggerInput>http://localhost:10003/v2/api-docs</swaggerInput>
                    <outputDir>src/main/docs/asciidoc/generated</outputDir>
                    <config>
                        <swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>
                    </config>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>1.5.6</version>
                <configuration>
                    <sourceDirectory>src/main/docs/asciidoc/generated</sourceDirectory>
                    <outputDirectory>src/main/docs/asciidoc/html</outputDirectory>
                    <backend>html</backend>
                    <sourceHighlighter>coderay</sourceHighlighter>
                    <attributes>
                        <doctype>book</doctype>
                        <toc>left</toc>
                        <toclevels>3</toclevels>
                        <numbered></numbered>
                        <hardbreaks></hardbreaks>
                        <sectlinks></sectlinks>
                        <sectanchors></sectanchors>
                    </attributes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <copy overwrite="true"
                                      tofile="${session.executionRootDirectory}/target/${artifactId}.jar"
                                      file="${project.build.directory}/${artifactId}.jar"/>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--docker镜像build插件-->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.0.0</version>
                <configuration>
                    <!-- 注意imageName一定要是符合正则[a-z0-9-_.]的，否则构建不会成功 -->
                    <imageName>cike/${project.artifactId}</imageName>
                    <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
                    <rm>true</rm>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>